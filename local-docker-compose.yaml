version: '3.8'
services:
  client-quote-generator-core-db-server:
    container_name: client-quote-generator-core-db-server
    image: postgres:14.2-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - ./pg-docker-container-data:/var/lib/postgresql/data

  client-quote-generator-core:
    container_name: client-quote-generator-core
    image: client-quote-generator-core
    ports:
      - ${PORT}:3000
    environment:
      - PORT=${PORT}
      - ENVIRONMENT=${ENVIRONMENT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      # same as WORKDIR in your Dockerfile.
      # We are binding ./ (current directory) here unto ./home/app directory inside the container so any changes here in the ./ gets reflected on the ./home/app directory inside the container
      # Why? Since we're using ts-node-dev (ts-node+nodemon) any changes on this host ./ folder will be reflected on the ./home/app inside the container, so need to rebuild the docker image and restart the docker-compose
      - ./:/home/app
